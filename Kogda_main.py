import telebot
import json
import os
from telebot import types

API_TOKEN = '8121551283:AAEUChSEFU5NurFidyP6R8JC2ptf8Uh4kOU'
bot = telebot.TeleBot(API_TOKEN)
users_data_file = 'kogda_bd.json'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
def read_users_data():
    if os.path.exists(users_data_file):
        with open(users_data_file, 'r', encoding='utf-8') as file:
            try:
                return json.load(file)
            except json.JSONDecodeError:
                return {}
    return {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
def write_users_data(data):
    with open(users_data_file, 'w', encoding='utf-8') as file:
        json.dump(data, file, indent=4, ensure_ascii=False)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    language_code = message.from_user.language_code

    users_data = read_users_data()

    if user_id not in users_data:
        score = len(users_data) + 1
        users_data[user_id] = {
            'id': user_id,
            'username': username,
            'first_name': first_name,
            'last_name': last_name,
            'language_code': language_code,
            'score': score
        }
        write_users_data(users_data)

    bot.send_message(message.chat.id,
                     f"<b>üëã–ü—Ä–∏–≤–µ—Ç, {first_name}!</b>\n"
                     f"üç≠–¢—ã –∑–∞—à–µ–ª —Å—é–¥–∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫!\n\n"
                     f"<b>üåÉ–í—Å–µ –∑–Ω–∞—é—Ç —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ - –ø–æ–∏—Å–∫ –ø–æ —Ä–∞–π–æ–Ω–∞–º.</b>\n\n"
                     f"<i>–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞ –∏ –±–æ—Ç–∞. "
                     f"–°–µ–π—á–∞—Å –∏–º–µ–µ–º –ø—Ä–æ–±–ª–µ–º—É –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤. "
                     f"–ü–æ—ç—Ç–æ–º—É –ø—Ä–æ—Å—å–±–∞ –Ω–µ –æ–±—Ä–∞—â–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–Ω–æ—Å—Ç–∏ –∏ –±–∞–≥–∏, –º—ã –∏ —Ç–∞–∫ –∑–Ω–∞–µ–º –ø—Ä–æ –Ω–∏—Ö –∏ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Ä–µ—à–µ–Ω–∏–µ–º</i>",
                     parse_mode='HTML')
    bot.send_message(message.chat.id, "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É.")
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    button = types.KeyboardButton("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–æ–±–æ—Ç–∞")
    markup.add(button)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–æ–±–æ—Ç–∞"
@bot.message_handler(func=lambda message: message.text == "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–æ–±–æ—Ç–∞")
def check_robot(message):
    bot.send_message(message.chat.id, "<a href='https://b64a-87-245-175-2.ngrok-free.app'>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏</a>", parse_mode='HTML')

if __name__ == "__main__":
    bot.polling()
